# Generated by Django 5.2.1 on 2025-05-24 19:54

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DiscountCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Discount Code')),
                ('discount_type', models.CharField(choices=[('percentage', 'Percentage Discount'), ('fixed_amount', 'Fixed Amount Discount')], max_length=20, verbose_name='Discount Type')),
                ('value', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Value')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('valid_from', models.DateTimeField(blank=True, null=True, verbose_name='Valid From')),
                ('valid_to', models.DateTimeField(blank=True, null=True, verbose_name='Valid To')),
                ('max_uses', models.PositiveIntegerField(blank=True, null=True, verbose_name='Maximum Uses')),
                ('times_used', models.PositiveIntegerField(default=0, verbose_name='Times Used')),
                ('min_order_value', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True, verbose_name='Minimum Order Value')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Discount Code',
                'verbose_name_plural': 'Discount Codes',
                'ordering': ['-created_at', 'code'],
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('applied_discount_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.discountcode', verbose_name='Applied Discount Code')),
            ],
            options={
                'verbose_name': 'Shopping Cart',
                'verbose_name_plural': 'Shopping Carts',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Order ID')),
                ('subtotal_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Subtotal Amount')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Discount Amount')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total Amount')),
                ('status', models.CharField(choices=[('pending_payment', 'Pending Payment'), ('awaiting_gateway_redirect', 'Awaiting Gateway Redirect'), ('payment_failed', 'Payment Failed'), ('processing_enrollment', 'Processing Enrollment/Registration'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('refund_pending', 'Refund Pending'), ('refunded', 'Refunded')], default='pending_payment', max_length=30, verbose_name='Order Status')),
                ('payment_gateway_authority', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='Payment Gateway Authority (Zarinpal)')),
                ('payment_gateway_txn_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Payment Gateway Transaction ID (Zarinpal ref_id)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True, verbose_name='Paid At')),
                ('discount_code_applied', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders_applied_to', to='shop.discountcode', verbose_name='Applied Discount Code')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Item ID')),
                ('description', models.CharField(max_length=255, verbose_name='Item Description (at time of order)')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price (at time of order)')),
                ('content_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(('app_label', 'events'), ('model', 'presentation')), models.Q(('app_label', 'events'), ('model', 'solocompetition')), models.Q(('app_label', 'events'), ('model', 'competitionteam')), _connector='OR'), null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype', verbose_name='Item Type')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='shop.order', verbose_name='Order')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(verbose_name='Item ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='shop.cart', verbose_name='Cart')),
                ('content_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(('app_label', 'events'), ('model', 'presentation')), models.Q(('app_label', 'events'), ('model', 'solocompetition')), models.Q(('app_label', 'events'), ('model', 'competitionteam')), _connector='OR'), on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Item Type')),
            ],
            options={
                'verbose_name': 'Cart Item',
                'verbose_name_plural': 'Cart Items',
                'ordering': ['-added_at'],
                'unique_together': {('cart', 'content_type', 'object_id')},
            },
        ),
    ]
